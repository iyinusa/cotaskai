// Minimal Dexie Cloud placeholder to prevent service worker registration failures
(function(global) {
    "use strict";
    
    // Check if Dexie is available
    if (typeof Dexie === 'undefined') {
        console.error("Dexie is required for Dexie Cloud to work");
        return;
    }
    
    // Simple placeholder for Dexie Cloud functionality
    Dexie.Cloud = {
        configure: function(options) {
            console.log("Dexie Cloud placeholder configured with:", options);
            return this;
        },
        currentUserId: function() {
            return Promise.resolve(null);
        },
        login: function(options) {
            console.log("Dexie Cloud login called with:", options);
            return Promise.resolve({ message: "Login functionality not available in placeholder" });
        },
        logout: function() {
            console.log("Dexie Cloud logout called");
            return Promise.resolve({ success: true });
        },
        sync: function() {
            console.log("Dexie Cloud sync called (placeholder)");
            return Promise.resolve({ pullCount: 0, pushCount: 0 });
        }
    };
    
    // Add Dexie Cloud addon
    Dexie.addons.push(function(db) {
        db.cloud = Dexie.Cloud;
    });
    
    // Expose to global scope
    global.dexieCloud = Dexie.Cloud;
    
})(typeof self !== 'undefined' ? self : this);
